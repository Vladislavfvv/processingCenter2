<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
<!--		<version>3.4.3</version>-->
<!--		<version>3.3.2</version>-->
		<version>3.4.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.edme</groupId>
	<artifactId>processingCenter</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>processingCenter</name>
	<description>Microservice ProcessingCenter for Spring Boot</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>17</java.version>
<!--		<spring-cloud.version>2022.0.5</spring-cloud.version>-->
<!--		<spring-boot.version>3.4.3</spring-boot.version>-->
<!--		<spring-cloud.version>2023.0.1</spring-cloud.version>-->
		<spring-cloud.version>2024.0.0</spring-cloud.version>
<!--		<mapstruct>1.6.2</mapstruct>-->
<!--		<opentelemetry.version>1.43.0</opentelemetry.version>-->
		<opentelemetry.version>1.34.1</opentelemetry.version>
		<keycloak.version>24.0.3</keycloak.version>
	</properties>
<!--	<repositories>-->
<!--		<repository>-->
<!--			<id>otel-earlyaccess</id>-->
<!--			<url>https://oss.sonatype.org/content/repositories/snapshots</url>-->
<!--		</repository>-->
<!--	</repositories>-->


	<dependencies>

		<dependency>
			<groupId>org.keycloak</groupId>
			<artifactId>keycloak-spring-boot-starter</artifactId>
<!--						<version>24.0.3</version>-->
			<version>${keycloak.version}</version>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
<!--			<version></version>-->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
			<!--			<version></version>-->
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-amqp</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-streams</artifactId>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.amqp</groupId>
			<artifactId>spring-rabbit-stream</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>org.springframework.kafka</groupId>-->
<!--			<artifactId>spring-kafka</artifactId>-->
<!--		</dependency>-->
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity6</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-docker-compose</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.amqp</groupId>
			<artifactId>spring-rabbit-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>org.springframework.kafka</groupId>-->
<!--			<artifactId>spring-kafka-test</artifactId>-->
<!--			<scope>test</scope>-->
<!--		</dependency>-->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>1.5.5.Final</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>1.5.5.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok-mapstruct-binding</artifactId>
			<version>0.2.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>3.2.2</version>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>org.springdoc</groupId>-->
<!--			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>-->
<!--			<version>2.8.6</version>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>org.springdoc</groupId>-->
<!--			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>-->
<!--			<version>2.3.0</version> &lt;!&ndash; Совместим с Spring Boot 3.3 &ndash;&gt;-->
<!--		</dependency>-->
				<dependency>
					<groupId>org.springdoc</groupId>
					<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
					<version>2.6.0</version>
				</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
<!--			<version>4.2.0</version>-->
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
<!--			<version>4.2.0</version>-->
		</dependency>

		<dependency>
			<groupId>org.springframework.retry</groupId>
			<artifactId>spring-retry</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>


		<dependency>
			<groupId>com.edme</groupId>
			<artifactId>common-dto</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>com.edme</groupId>
			<artifactId>common</artifactId>
			<version>1.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
			<version>2.15.2</version> <!-- или вашу версию Jackson -->
		</dependency>
<!--		<dependency>-->
<!--			<groupId>io.opentelemetry</groupId>-->
<!--			<artifactId>opentelemetry-exporter-jaeger</artifactId>-->
<!--			<version>1.34.1</version>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>io.opentelemetry</groupId>-->
<!--			<artifactId>opentelemetry-sdk</artifactId>-->
<!--			<version>1.50.0</version>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>io.opentelemetry.instrumentation</groupId>-->
<!--			<artifactId>opentelemetry-spring-boot-starter</artifactId>-->
<!--			<version>1.22.1</version>-->
<!--		</dependency>-->

<!--		&lt;!&ndash; SDK &ndash;&gt;-->
<!--		<dependency>-->
<!--			<groupId>io.opentelemetry</groupId>-->
<!--			<artifactId>opentelemetry-sdk</artifactId>-->
<!--&lt;!&ndash;			<version>1.34.1</version> &lt;!&ndash; подходит для OTEL agent 2.3.0 &ndash;&gt;&ndash;&gt;-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>io.opentelemetry.instrumentation</groupId>-->
<!--			<artifactId>opentelemetry-spring-boot</artifactId>-->
<!--&lt;!&ndash;			<version>1.32.0-alpha</version>&ndash;&gt;-->
<!--		</dependency>-->
<!--		&lt;!&ndash; Jaeger Exporter &ndash;&gt;-->
<!--		<dependency>-->
<!--			<groupId>io.opentelemetry</groupId>-->
<!--			<artifactId>opentelemetry-exporter-jaeger</artifactId>-->
<!--&lt;!&ndash;			<version>1.34.1</version>&ndash;&gt;-->
<!--		</dependency>-->

		<!-- Spring Boot Starter -->
<!--		<dependency>-->
<!--			<groupId>io.opentelemetry.instrumentation</groupId>-->
<!--			<artifactId>opentelemetry-spring-boot-starter</artifactId>-->
<!--&lt;!&ndash;			<version>2.3.0</version>&ndash;&gt;-->
<!--		</dependency>-->

<!--		<dependency>-->
<!--			<groupId>io.opentelemetry.instrumentation</groupId>-->
<!--			<artifactId>opentelemetry-spring-boot-autoconfigure</artifactId>-->
<!--			<version>2.16.0</version>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>io.opentelemetry.instrumentation</groupId>-->
<!--			<artifactId>opentelemetry-spring-boot-starter</artifactId>-->
<!--			<version>2.16.0</version>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>io.opentelemetry</groupId>-->
<!--			<artifactId>opentelemetry-exporter-jaeger</artifactId>-->
<!--			<version>1.32.0</version>-->
<!--		</dependency>-->

		<!--variant3-->
		<!-- SDK -->
<!--		<dependency>-->
<!--			<groupId>io.opentelemetry</groupId>-->
<!--			<artifactId>opentelemetry-sdk</artifactId>-->
<!--			<version>1.34.1</version>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>io.opentelemetry.instrumentation</groupId>-->
<!--			<artifactId>opentelemetry-spring-boot</artifactId>-->
<!--			<version>1.32.0-alpha</version>-->
<!--		</dependency>-->

<!--		<dependency>-->
<!--			<groupId>io.opentelemetry</groupId>-->
<!--			<artifactId>opentelemetry-exporter-otlp</artifactId>-->
<!--			<version>1.34.1</version>-->
<!--		</dependency>-->

<!--		&lt;!&ndash; Jaeger Exporter &ndash;&gt;-->
<!--		<dependency>-->
<!--			<groupId>io.opentelemetry</groupId>-->
<!--			<artifactId>opentelemetry-exporter-jaeger</artifactId>-->
<!--			<version>1.32.0</version>-->
<!--		</dependency>-->
		<!--variant3-->

		<!-- Spring Boot Autoconfig -->
<!--		<dependency>-->
<!--			<groupId>io.opentelemetry.instrumentation</groupId>-->
<!--			<artifactId>opentelemetry-spring-boot-autoconfigure</artifactId>-->
<!--			<version>2.16.0</version>-->
<!--		</dependency>-->
<!--		<dependency>-->
<!--			<groupId>io.opentracing.contrib</groupId>-->
<!--			<artifactId>opentracing-spring-jaeger-web-starter</artifactId>-->
<!--			<version>3.3.1</version>-->
<!--		</dependency>-->


		<!--Variant4 -->
		<!-- Starter для автоматической настройки OpenTelemetry в Spring Boot -->
<!--		<dependency>-->
<!--			<groupId>io.opentelemetry.instrumentation</groupId>-->
<!--			<artifactId>opentelemetry-spring-boot-starter</artifactId>-->
<!--			<version>1.34.1</version>-->
<!--		</dependency>-->

<!--		<dependency>-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-starter</artifactId>-->
<!--			<version>3.4.0</version>-->
<!--		</dependency>-->



		<!-- Variant5 -->
<!--		&lt;!&ndash; OpenTelemetry SDK &ndash;&gt;-->
<!--		<dependency>-->
<!--			<groupId>io.opentelemetry</groupId>-->
<!--			<artifactId>opentelemetry-sdk</artifactId>-->
<!--			<version>${opentelemetry.version}</version>-->
<!--&lt;!&ndash;			<version>1.34.1</version>&ndash;&gt;-->
<!--		</dependency>-->

<!--		<dependency>-->
<!--			<groupId>io.opentelemetry</groupId>-->
<!--			<artifactId>opentelemetry-exporter-jaeger</artifactId>-->
<!--			<version>${opentelemetry.version}</version>-->
<!--&lt;!&ndash;			<version>1.34.1</version>&ndash;&gt;-->
<!--		</dependency>-->

<!--		&lt;!&ndash; OpenTelemetry API &ndash;&gt;-->
<!--		<dependency>-->
<!--			<groupId>io.opentelemetry</groupId>-->
<!--			<artifactId>opentelemetry-api</artifactId>-->
<!--			<version>${opentelemetry.version}</version>-->
<!--&lt;!&ndash;			<version>1.34.1</version>&ndash;&gt;-->
<!--		</dependency>-->

<!--		&lt;!&ndash; OpenTelemetry context propagation &ndash;&gt;-->
<!--		<dependency>-->
<!--			<groupId>io.opentelemetry</groupId>-->
<!--			<artifactId>opentelemetry-context</artifactId>-->
<!--			<version>${opentelemetry.version}</version>-->
<!--&lt;!&ndash;			<version>1.34.1</version>&ndash;&gt;-->
<!--		</dependency>-->

<!--		<dependency>-->
<!--			<groupId>io.opentelemetry</groupId>-->
<!--			<artifactId>opentelemetry-sdk-extension-autoconfigure</artifactId>-->
<!--			<version>${opentelemetry.version}</version>-->
<!--&lt;!&ndash;			<version>1.34.1</version>&ndash;&gt;-->
<!--		</dependency>-->

<!--		<dependency>-->
<!--			<groupId>org.slf4j</groupId>-->
<!--			<artifactId>jul-to-slf4j</artifactId>-->
<!--			<version>2.0.13</version>-->
<!--		</dependency>-->
<!--		-->

		<!-- Variant5 -->
<!--		&lt;!&ndash; Exporter: OTLP (для Collector, Jaeger, Grafana и пр.) &ndash;&gt;-->
<!--		<dependency>-->
<!--			<groupId>io.opentelemetry</groupId>-->
<!--			<artifactId>opentelemetry-exporter-otlp</artifactId>-->
<!--			<version>${opentelemetry.version}</version>-->
<!--&lt;!&ndash;			<version>1.34.1</version>&ndash;&gt;-->
<!--		</dependency>-->

		<!-- Optional: SLF4J bridge to see OpenTelemetry logs in your logging system -->
<!--VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV-->
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-sdk</artifactId>
			<version>${opentelemetry.version}</version>
			<!--			<version>1.34.1</version>-->
		</dependency>
		<dependency>
			<groupId>io.opentelemetry.instrumentation</groupId>
			<artifactId>opentelemetry-spring-boot</artifactId>
			<version>1.32.0-alpha</version>
		</dependency>

		<dependency>
			<groupId>io.opentracing.contrib</groupId>
			<artifactId>opentracing-spring-jaeger-web-starter</artifactId>
			<version>3.3.1</version>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-exporter-otlp</artifactId>
			<version>${opentelemetry.version}</version>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-exporter-jaeger</artifactId>
			<version>${opentelemetry.version}</version>
			<!--			<version>1.34.1</version>-->
		</dependency>
		<!-- OpenTelemetry API -->
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-api</artifactId>
			<version>${opentelemetry.version}</version>
			<!--			<version>1.34.1</version>-->
		</dependency>

		<!-- OpenTelemetry context propagation -->
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-context</artifactId>
			<version>${opentelemetry.version}</version>
			<!--			<version>1.34.1</version>-->
		</dependency>
<!--VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV-->
<!--		<dependency>-->
<!--			<groupId>io.opentelemetry</groupId>-->
<!--			<artifactId>opentelemetry-sdk-extension-autoconfigure</artifactId>-->
<!--			<version>1.34.1</version>-->
<!--		</dependency>-->


	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
<!--			<dependency>-->
<!--				<groupId>io.opentelemetry.instrumentation</groupId>-->
<!--				<artifactId>opentelemetry-bom-alpha</artifactId>-->
<!--				<artifactId>opentelemetry-bom-alpha</artifactId>-->
<!--				<version>2.3.0</version>-->
<!--				<type>pom</type>-->
<!--				<scope>import</scope>-->
<!--			</dependency>-->
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<!-- Compiler plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>UTF-8</encoding>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>1.18.30</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>1.5.5.Final</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>0.2.0</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<!-- Spring Boot Maven plugin -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
